install.packages('pls')
install.packages('gbm')
setwd('~/git/loadings/code')#read the data files into Reagle_file = '../data/eagle/eaglecreek.csv'joos_file = '../data/joos/joosvalleycreek.csv'otter_file = '../data/otter/ottercreek.csv'data_files = list(eagle_file, joos_file, otter_file)for(data_file in data_files) {    loading_data = read.csv(data_file, header=T)    threshold <- as.numeric( quantile(loading_data$logsstormtot, 0.9) )     #establish the threshold or a major event        loading_data = within( loading_data, {        event_type <- factor(event_type)                                    #turn event_type into a factor        year <- factor(year)                                                #turn year into a factor        melt_snow[melt_snow=='N' | melt_snow=='Z' | melt_snow=='U'] <- NA   #code missing values for snowmelt        melt_snow <- as.numeric(levels(melt_snow)[melt_snow])               #Now snowmelt can be turned into a number        major <- ifelse(logsstormtot>threshold,1,0)                         #tag the events that are above the 90th percentile        } )            output_file = paste(substr(data_file,0,nchar(data_file)-4), "_out.csv", sep='')    write.table(loading_data, file=output_file, sep=',', row.names=F, col.names=F)}
?paste
setwd('~/git/loadings/code')#list of the stream names as they appear in the file namesstreams = list('eagle', 'joosvalley', 'otter')for(stream in streams) {	data_file = paste('../data', stream, '/', stream, 'creek.csv', sep='')    loading_data = read.csv(data_file, header=T)    threshold <- as.numeric( quantile(loading_data$logsstormtot, 0.9) )     #establish the threshold or a major event        loading_data = within( loading_data, {        event_type <- factor(event_type)                                    #turn event_type into a factor        year <- factor(year)                                                #turn year into a factor        melt_snow[melt_snow=='N' | melt_snow=='Z' | melt_snow=='U'] <- NA   #code missing values for snowmelt        melt_snow <- as.numeric(levels(melt_snow)[melt_snow])               #Now snowmelt can be turned into a number        major <- ifelse(logsstormtot>threshold,1,0)                         #tag the events that are above the 90th percentile        } )            output_file = paste(substr(data_file,0,nchar(data_file)-4), "_out.csv", sep='')    write.table(loading_data, file=output_file, sep=',', row.names=F, col.names=F)}
setwd('~/git/loadings/code')#list of the stream names as they appear in the file namesstreams = list('eagle', 'joosvalley', 'otter')for(stream in streams) {	data_file = paste('../data/', stream, '/', stream, 'creek.csv', sep='')    loading_data = read.csv(data_file, header=T)    threshold <- as.numeric( quantile(loading_data$logsstormtot, 0.9) )     #establish the threshold or a major event        loading_data = within( loading_data, {        event_type <- factor(event_type)                                    #turn event_type into a factor        year <- factor(year)                                                #turn year into a factor        melt_snow[melt_snow=='N' | melt_snow=='Z' | melt_snow=='U'] <- NA   #code missing values for snowmelt        melt_snow <- as.numeric(levels(melt_snow)[melt_snow])               #Now snowmelt can be turned into a number        major <- ifelse(logsstormtot>threshold,1,0)                         #tag the events that are above the 90th percentile        } )            output_file = paste(substr(data_file,0,nchar(data_file)-4), "_out.csv", sep='')    write.table(loading_data, file=output_file, sep=',', row.names=F, col.names=F)}
setwd('~/git/loadings/code')#list of the stream names as they appear in the file namesstreams = list('eagle', 'joosvalley', 'otter')for(stream in streams) {	data_file = paste('../data/', stream, '/', stream, 'creek.csv', sep='')    loading_data = read.csv(data_file, header=T)    threshold <- as.numeric( quantile(loading_data$logsstormtot, 0.9) )     #establish the threshold or a major event        loading_data = within( loading_data, {        event_type <- factor(event_type)                                    #turn event_type into a factor        year <- factor(year)                                                #turn year into a factor        melt_snow[melt_snow=='N' | melt_snow=='Z' | melt_snow=='U'] <- NA   #code missing values for snowmelt        melt_snow <- as.numeric(levels(melt_snow)[melt_snow])               #Now snowmelt can be turned into a number        major <- ifelse(logsstormtot>threshold,1,0)                         #tag the events that are above the 90th percentile        } )            output_file = paste(substr(data_file,0,nchar(data_file)-4), "_out.csv", sep='')    write.table(loading_data, file=output_file, sep=',', row.names=F, col.names=F)}
setwd('~/git/loadings/code')#list of the stream names as they appear in the file namesstreams = list('eagle', 'joosvalley', 'otter')loadings = data.frame()for(stream in streams) {	data_file = paste('../data/', stream, '/', stream, 'creek.csv', sep='')    stream_data = read.csv(data_file, header=T)    threshold <- as.numeric( quantile(stream_data$logsstormtot, 0.9) )     #establish the threshold or a major event        stream_data = within( stream_data, {        event_type <- factor(event_type)                                    #turn event_type into a factor        year <- factor(year)                                                #turn year into a factor        melt_snow[melt_snow=='N' | melt_snow=='Z' | melt_snow=='U'] <- NA   #code missing values for snowmelt        melt_snow <- as.numeric(levels(melt_snow)[melt_snow])               #Now snowmelt can be turned into a number        major <- ifelse(logsstormtot>threshold,1,0)                         #tag the events that are above the 90th percentile        stream <- stream													#identify which stream we're working on        } )        	loadings <- rbind(loadings, stream_data)	    output_file = paste(substr(data_file,0,nchar(data_file)-4), "_out.csv", sep='')    write.table(stream_data, file=output_file, sep=',', row.names=F, col.names=F)}
setwd('~/git/loadings/code')#list of the stream names as they appear in the file namesstreams = list('eagle', 'joosvalley', 'otter')loadings = data.frame()for(stream_name in streams) {	data_file = paste('../data/', stream_name, '/', stream_name, 'creek.csv', sep='')    stream_data = read.csv(data_file, header=T)    threshold <- as.numeric( quantile(stream_data$logsstormtot, 0.9) )     #establish the threshold or a major event        stream_data = within( stream_data, {        event_type <- factor(event_type)                                    #turn event_type into a factor        year <- factor(year)                                                #turn year into a factor        melt_snow[melt_snow=='N' | melt_snow=='Z' | melt_snow=='U'] <- NA   #code missing values for snowmelt        melt_snow <- as.numeric(levels(melt_snow)[melt_snow])               #Now snowmelt can be turned into a number        major <- ifelse(logsstormtot>threshold,1,0)                         #tag the events that are above the 90th percentile        stream <- stream_name												#identify which stream we're working on        } )        	loadings <- rbind(loadings, stream_data)	    output_file = paste(substr(data_file,0,nchar(data_file)-4), "_out.csv", sep='')    write.table(stream_data, file=output_file, sep=',', row.names=F, col.names=F)}
rbind?
)
rbind
?rbind
loadings
str(loadings)
loadings$melt_water
loadings$total_water
loadings$total_water=='na'
which(loadings@melt_water=='na')
which(loadings$melt_water=='na')
loadings$num_events
setwd('~/git/loadings/code')#list of the stream names as they appear in the file namesstreams = list('eagle', 'joosvalley', 'otter')loadings = data.frame()for(stream_name in streams) {	data_file = paste('../data/', stream_name, '/', stream_name, 'creek.csv', sep='')    stream_data = read.csv(data_file, header=T, na.strings=c('NA', 'na'))    threshold <- as.numeric( quantile(stream_data$logsstormtot, 0.9) )     #establish the threshold or a major event        stream_data = within( stream_data, {        event_type <- factor(event_type)                                    #turn event_type into a factor        year <- factor(year)                                                #turn year into a factor        melt_snow[melt_snow=='N' | melt_snow=='Z' | melt_snow=='U'] <- NA   #code missing values for snowmelt        melt_snow <- as.numeric(levels(melt_snow)[melt_snow])               #Now snowmelt can be turned into a number        major <- ifelse(logsstormtot>threshold,1,0)                         #tag the events that are above the 90th percentile        stream <- stream_name												#identify which stream we're working on        } )        	loadings <- rbind(loadings, stream_data)	    output_file = paste(substr(data_file,0,nchar(data_file)-4), "_out.csv", sep='')    write.table(stream_data, file=output_file, sep=',', row.names=F, col.names=F)}
str(loadings)
rpart
